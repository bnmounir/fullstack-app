{"version":3,"sources":["images/profile-image.png","images/logo1.png","store/actionTypes.js","store/reducers/currentUser.js","store/reducers/messages.js","store/reducers/index.js","store/reducers/errors.js","services/api.js","store/actions/errors.js","store/actions/auth.js","containers/Navbar.js","components/MessageItem.js","containers/MessageList.js","store/actions/messages.js","components/UserAside.js","components/MessagesTimeline.js","components/Homepage.js","components/AuthForm.js","hocs/withAuth.js","containers/MessageForm.js","containers/Main.js","containers/App.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SET_CURRENT_USER","DEFAULT_STATE","isAuthenticated","user","message","state","arguments","length","undefined","action","type","Object","toConsumableArray","messages","filter","_id","id","rootReducer","combineReducers","currentUser","keys","errors","objectSpread","error","apiCall","method","path","data","Promise","resolve","reject","axios","toLowerCase","then","res","catch","err","response","addError","removeError","setCurrentUser","setAuthorizationToken","token","defaults","headers","common","concat","setTokenHeader","Navbar","logout","e","preventDefault","_this","props","react_default","a","createElement","className","this","style","marginLeft","width","height","src","profileImageUrl","DefaultProfileImg","alt","username","display","margin","Link","to","Logo","onClick","Component","connect","dispatch","localStorage","clear","MessageItem","_ref","date","text","removeMessage","isCorrectUser","dist_default","fromNow","MessageList","fetchMessages","_this$props","messageList","map","m","components_MessageItem","key","createdAt","bind","user_id","message_id","UserAside","MessagesTimeline","containers_MessageList","Homepage","components_MessagesTimeline","AuthForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","authType","signUp","onAuth","history","push","handleChange","setState","defineProperty","target","name","value","email","password","_this$state","heading","buttonText","listen","onSubmit","htmlFor","onChange","withAuth","ComponentToBeRendered","Authenticate","_Component","apply","inherits","createClass","nextProps","MessageForm","handleNewMessage","postNewMessage","_this2","getState","withRouter","authUser","userData","objectWithoutProperties","setItem","Switch","Route","exact","render","assign","AuthForm_AuthForm","component","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","jwtToken","jwtDecode","App","es","BrowserRouter","containers_Navbar","containers_Main","Boolean","location","hostname","match","ReactDOM","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abbb12b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-image.5f5f881d.png\";","module.exports = __webpack_public_path__ + \"static/media/logo1.7f512b04.png\";","export const ADD_ERROR = 'ADD_ERROR';\nexport const REMOVE_ERROR = 'REMOVE_ERROR';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const LOAD_MESSAGES = 'LOAD_MESSAGES';\nexport const REMOVE_MESSAGE = 'REMOVE_MESSAGE';\n","import { SET_CURRENT_USER } from '../actionTypes';\n\nconst DEFAULT_STATE = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        isAuthenticated: Object.keys(action.user).length,\n        user: action.user\n      };\n    default:\n      return state;\n  }\n};\n","import { LOAD_MESSAGES, REMOVE_MESSAGE } from '../actionTypes';\n\nconst message = (state = [], action) => {\n  switch (action.type) {\n    case LOAD_MESSAGES:\n      return [...action.messages];\n    case REMOVE_MESSAGE:\n      return state.filter(message => message._id !== action.id);\n    default:\n      return state;\n  }\n};\n\nexport default message;\n","import { combineReducers } from 'redux';\nimport currentUser from './currentUser';\nimport errors from './errors';\nimport messages from './messages';\n\nconst rootReducer = combineReducers({\n  currentUser,\n  errors,\n  messages\n});\n\nexport default rootReducer;\n","import { ADD_ERROR, REMOVE_ERROR } from '../actionTypes';\n\nexport default (state = { message: null }, action) => {\n  switch (action.type) {\n    case ADD_ERROR:\n      return { ...state, message: action.error };\n    case REMOVE_ERROR:\n      return { ...state, message: null };\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n\nexport function setTokenHeader(token) {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n\nexport function apiCall(method, path, data) {\n  return new Promise((resolve, reject) => {\n    return axios[method.toLowerCase()](path, data)\n      .then(res => {\n        return resolve(res.data);\n      })\n      .catch(err => {\n        return reject(err.response.data.error);\n      });\n  });\n}\n","import { ADD_ERROR, REMOVE_ERROR } from '../actionTypes';\n\nexport const addError = error => ({\n  type: ADD_ERROR,\n  error\n});\n\nexport const removeError = () => ({\n  type: REMOVE_ERROR\n});\n","import { apiCall, setTokenHeader } from '../../services/api';\nimport { SET_CURRENT_USER } from '../actionTypes';\nimport { addError, removeError } from './errors';\n\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n}\n\nexport function setAuthorizationToken(token) {\n  setTokenHeader(token);\n}\n\nexport function logout() {\n  return dispatch => {\n    localStorage.clear();\n    setAuthorizationToken(false);\n    dispatch(setCurrentUser({}));\n  };\n}\n\nexport function authUser(type, userData) {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      return apiCall('post', `/api/auth/${type}`, userData)\n        .then(({ token, ...user }) => {\n          localStorage.setItem('jwtToken', token);\n          setAuthorizationToken(token);\n          dispatch(setCurrentUser(user));\n          dispatch(removeError());\n          resolve();\n        })\n        .catch(err => {\n          dispatch(addError(err.message));\n          reject();\n        });\n    });\n  };\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../store/actions/auth';\nimport Logo from '../images/logo1.png';\nimport DefaultProfileImg from '../images/profile-image.png';\n\nclass Navbar extends Component {\n  logout = e => {\n    e.preventDefault();\n    this.props.logout();\n  };\n\n  render() {\n    return (\n      <nav className='navbar navbar-expand'>\n        <div className='container-fluid'>\n          <div className='navbar-header display-inline'>\n            {this.props.currentUser.isAuthenticated ? (\n              <div className='navbar-brand'>\n                <img\n                  style={{\n                    marginLeft: '20px',\n                    width: '50px',\n                    height: '50px'\n                  }}\n                  className='img-thumbnail'\n                  src={\n                    this.props.currentUser.user.profileImageUrl ||\n                    DefaultProfileImg\n                  }\n                  alt={this.props.currentUser.user.username}\n                />\n\n                <h5 style={{ display: 'inline', margin: '3px' }}>\n                  Sign in as: {this.props.currentUser.user.username}\n                </h5>\n              </div>\n            ) : (\n              <Link to='/' className='navbar-brand'>\n                <img src={Logo} alt='Home' />\n              </Link>\n            )}\n          </div>\n          {this.props.currentUser.isAuthenticated ? (\n            <ul className='nav navbar-nav navbar-right'>\n              <li>\n                <Link\n                  to={`/users/${this.props.currentUser.user.id}/messages/new`}\n                >\n                  New Messages\n                </Link>\n              </li>\n              <li>\n                <Link to='/' onClick={this.logout}>\n                  Log out\n                </Link>\n              </li>\n            </ul>\n          ) : (\n            <ul className='nav navbar-nav navbar-right'>\n              <li>\n                <Link to='/signup'>Sign up</Link>\n              </li>\n              <li>\n                <Link to='/signin'>Sign in</Link>\n              </li>\n            </ul>\n          )}\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser,\n    username: state.username\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Navbar);\n","import React from 'react';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\nimport DefaultProfileImg from '../images/profile-image.png';\n\nconst MessageItem = ({\n  date,\n  profileImageUrl,\n  text,\n  username,\n  removeMessage,\n  isCorrectUser\n}) => (\n  <div>\n    <li className='list-group-item'>\n      <img\n        src={profileImageUrl || DefaultProfileImg}\n        alt='profile'\n        height='100px'\n        width='100px'\n        className='timeline-image'\n      />\n      <div className='message-area' style={{ width: '90%' }}>\n        <Link to='/'>{username} &nbsp;</Link>\n        <span className='text-muted'>\n          <Moment className='text-muted' fromNow={true}>\n            {date}\n          </Moment>\n        </span>\n        <p>{text}</p>\n        {isCorrectUser && (\n          <button\n            type='button'\n            onClick={removeMessage}\n            className='btn btn-outline-danger btn-sm'\n          >\n            DELETE\n          </button>\n        )}\n      </div>\n    </li>\n  </div>\n);\n\nexport default MessageItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMessages, removeMessage } from '../store/actions/messages';\nimport MessageItem from '../components/MessageItem';\n\nclass MessageList extends Component {\n  componentDidMount() {\n    this.props.fetchMessages();\n  }\n  render() {\n    const { messages, removeMessage, currentUser } = this.props;\n    let messageList = messages.map(m => (\n      <MessageItem\n        key={m._id}\n        date={m.createdAt}\n        text={m.text}\n        username={m.user.username}\n        profileImageUrl={m.user.profileImageUrl}\n        removeMessage={removeMessage.bind(this, m.user._id, m._id)}\n        isCorrectUser={currentUser === m.user._id}\n      />\n    ));\n    return (\n      <div className='row col-sm-9'>\n        <div className='offset-1 col-sm-10'>\n          <ul className='list-group' id='messages'>\n            {messageList}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    messages: state.messages,\n    currentUser: state.currentUser.user.id\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { fetchMessages, removeMessage }\n)(MessageList);\n","import { apiCall } from '../../services/api';\nimport { addError } from './errors';\nimport { LOAD_MESSAGES, REMOVE_MESSAGE } from '../actionTypes';\n\nexport const loadMessages = messages => ({\n  type: LOAD_MESSAGES,\n  messages\n});\n\nexport const remove = id => ({\n  type: REMOVE_MESSAGE,\n  id\n});\n\nexport const removeMessage = (user_id, message_id) => {\n  return dispatch => {\n    return apiCall('delete', `/api/users/${user_id}/messages/${message_id}`)\n      .then(() => dispatch(remove(message_id)))\n      .catch(err => addError(err.message));\n  };\n};\n\nexport const fetchMessages = () => {\n  return dispatch => {\n    return apiCall('GET', '/api/messages')\n      .then(res => dispatch(loadMessages(res)))\n      .catch(err => addError(err.message));\n  };\n};\n\nexport const postNewMessage = text => (dispatch, getState) => {\n  let { currentUser } = getState();\n  const id = currentUser.user.id;\n  return apiCall('post', `/api/users/${id}/messages`, { text })\n    .then(res => {})\n    .catch(err => dispatch(addError(err.message)));\n};\n","import React from 'react';\n// import DefaultProfileImg from '../images/profile-image.png';\n\nexport default function UserAside({ profileImageUrl, username }) {\n  return (\n    <aside className='col-sm-2'>\n      {/* <div className='panel panel-default'>\n        <div className='panel-body'>\n          <img\n            src={profileImageUrl || DefaultProfileImg}\n            alt={username}\n            style={{\n              marginLeft: '20px',\n              width: '200px',\n              height: 'auto'\n            }}\n            className='img-thumbnail'\n          />\n          <span>{username}</span>\n        </div>\n      </div> */}\n    </aside>\n  );\n}\n","import React from 'react';\nimport MessageList from '../containers/MessageList';\nimport UserAside from '../components/UserAside';\n\nconst MessagesTimeline = props => {\n  return (\n    <div className='row'>\n      <UserAside\n        profileImageUrl={props.profileImageUrl}\n        username={props.username}\n      />\n      <MessageList />\n    </div>\n  );\n};\n\nexport default MessagesTimeline;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport MessagesTimeline from './MessagesTimeline';\n\nexport default function Homepage({ currentUser }) {\n  if (!currentUser.isAuthenticated) {\n    return (\n      <div className='home-hero'>\n        <h1 className='ho'>What's happening? Share with us.</h1>\n        <h4 className='ho'>Welcome to Middleman</h4>\n        <Link to='/signup' className='btn btn-primary'>\n          Sign up here!\n        </Link>\n      </div>\n    );\n  }\n  return (\n    <MessagesTimeline profileImageUrl={currentUser.user.profileImageUrl} />\n  );\n}\n","import React, { Component } from 'react';\n\nexport default class AuthForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      profileImageUrl: ''\n    };\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    const authType = this.props.signUp ? 'signup' : 'signin';\n    this.props.onAuth(authType, this.state).then(() => {\n      this.props.history.push('/');\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  render() {\n    const { email, username, password, profileImageUrl } = this.state;\n    const {\n      heading,\n      buttonText,\n      signUp,\n      errors,\n      history,\n      removeError\n    } = this.props;\n    history.listen(() => {\n      removeError();\n    });\n    return (\n      <div>\n        <div className='row justify-content-md-center text-center'>\n          <div className='col-md-6'>\n            <form onSubmit={this.handleSubmit}>\n              <h2>{heading}</h2>\n              {errors.message && (\n                <div className='alert alert-danger'>{errors.message}</div>\n              )}\n              <label htmlFor='email'>Email: </label>\n              <input\n                className='form-control'\n                type='email'\n                name='email'\n                id='email'\n                onChange={this.handleChange}\n                value={email}\n              />\n              <label htmlFor='password'>Password: </label>\n              <input\n                className='form-control'\n                type='password'\n                name='password'\n                id='password'\n                onChange={this.handleChange}\n                value={password}\n              />\n              {signUp && (\n                <div>\n                  <label htmlFor='username'>Username: </label>\n                  <input\n                    className='form-control'\n                    type='text'\n                    name='username'\n                    id='username'\n                    onChange={this.handleChange}\n                    value={username}\n                  />\n                  <label htmlFor='image-url'>Image Url: </label>\n                  <input\n                    className='form-control'\n                    type='text'\n                    name='profileImageUrl'\n                    id='image-url'\n                    onChange={this.handleChange}\n                    value={profileImageUrl}\n                  />\n                </div>\n              )}\n              <button className='btn btn-primary btn-block btn-lg'>\n                {buttonText}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport default function withAuth(ComponentToBeRendered) {\n  class Authenticate extends Component {\n    componentWillMount() {\n      if (this.props.isAuthenticated === false) {\n        this.props.history.push('/signin');\n      }\n    }\n    componentWillUpdate(nextProps) {\n      if (nextProps.isAuthenticated === false) {\n        this.props.history.push('/signin');\n      }\n    }\n    render() {\n      return <ComponentToBeRendered {...this.props} />;\n    }\n  }\n  function mapStateToProps(state) {\n    return {\n      isAuthenticated: state.currentUser.isAuthenticated\n    };\n  }\n\n  return connect(\n    mapStateToProps,\n    null\n  )(Authenticate);\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { postNewMessage } from '../store/actions/messages';\n\nclass MessageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: ''\n    };\n  }\n  handleNewMessage = e => {\n    e.preventDefault();\n    this.props.postNewMessage(this.state.message);\n    this.setState({ message: '' });\n    this.props.history.push('/');\n  };\n  render() {\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleNewMessage}>\n          {this.props.errors.message && (\n            <div className='alert alert-danger'>{this.props.errors}</div>\n          )}\n          <input\n            type='text'\n            className='form-control'\n            value={this.state.message}\n            onChange={e => this.setState({ message: e.target.value })}\n          />\n          <button type='submit' className='btn btn-success pull-right'>\n            Add my message!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errors: state.errors\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { postNewMessage }\n)(MessageForm);\n","import React from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Homepage from '../components/Homepage';\nimport AuthForm from '../components/AuthForm';\nimport { authUser } from '../store/actions/auth';\nimport { removeError } from '../store/actions/errors';\nimport withAuth from '../hocs/withAuth';\nimport MessageForm from '../containers/MessageForm';\n\nconst Main = props => {\n  const { authUser, errors, removeError, currentUser } = props;\n  return (\n    // <div className='container'>\n    <Switch>\n      <Route\n        exact\n        path='/'\n        render={props => <Homepage currentUser={currentUser} {...props} />}\n      />\n      <Route\n        exact\n        path='/signin'\n        render={props => {\n          return (\n            <AuthForm\n              removeError={removeError}\n              errors={errors}\n              onAuth={authUser}\n              buttonText='Sign in'\n              heading='Welcome Back'\n              {...props}\n            />\n          );\n        }}\n      />\n      <Route\n        exact\n        path='/signup'\n        render={props => {\n          return (\n            <AuthForm\n              removeError={removeError}\n              errors={errors}\n              onAuth={authUser}\n              signUp\n              buttonText='Sign up'\n              heading='Join us Today!'\n              {...props}\n            />\n          );\n        }}\n      />\n      <Route path='/users/:id/messages/new' component={withAuth(MessageForm)} />\n    </Switch>\n    // </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser,\n    errors: state.errors\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { authUser, removeError }\n  )(Main)\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '../store';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport { setAuthorizationToken, setCurrentUser } from '../store/actions/auth';\nimport jwtDecode from 'jwt-decode';\n\nconst store = configureStore();\n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken);\n  try {\n    store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n  } catch (e) {\n    store.dispatch(setCurrentUser({}));\n  }\n}\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <div className='onboarding'>\n        <Navbar />\n        <Main />\n      </div>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","import rootReducer from './reducers';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nexport function configureStore() {\n  const store = createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(thunk),\n      window.__REDUX_DEVTOOLS_EXTENSION__\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : f => f\n    )\n  );\n  return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}